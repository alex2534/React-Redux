{"ast":null,"code":"/** @format */\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n}; //needs an object as an argument\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  //reducers also receive an object or you could say a map\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      //this will inverte the state if true to false and if false to true\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); //the create store receives a parameter an object a configured object\n//this creates our react store\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/alexnascimento/Desktop/redux-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"mappings":"AAAA;AAEA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B,C,CAEA;;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAChCM,EAAAA,IAAI,EAAE,SAD0B;AAEhCC,EAAAA,YAAY,EAAEL,mBAFkB;AAGhC;AACAM,EAAAA,QAAQ,EAAE;AACTC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACP,OAAN;AACA,KAHQ;;AAITQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACP,OAAN;AACA,KANQ;;AAOTS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACvBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACA,KATQ;;AAUTC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACpB;AACAA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACA;;AAbQ;AAJsB,CAAD,CAAhC,C,CAqBA;AACA;;AACA,MAAMY,KAAK,GAAGf,cAAc,CAAC;AAC5BgB,EAAAA,OAAO,EAAEZ,YAAY,CAACY;AADM,CAAD,CAA5B;AAGA,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACc,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["/** @format */\n\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = { counter: 0, showCounter: true };\n\n//needs an object as an argument\nconst counterSlice = createSlice({\n\tname: \"counter\",\n\tinitialState: initialCounterState,\n\t//reducers also receive an object or you could say a map\n\treducers: {\n\t\tincrement(state) {\n\t\t\tstate.counter++;\n\t\t},\n\t\tdecrement(state) {\n\t\t\tstate.counter--;\n\t\t},\n\t\tincrease(state, action) {\n\t\t\tstate.counter = state.counter + action.payload;\n\t\t},\n\t\ttoggleCounter(state) {\n\t\t\t//this will inverte the state if true to false and if false to true\n\t\t\tstate.showCounter = !state.showCounter;\n\t\t},\n\t},\n});\n\n//the create store receives a parameter an object a configured object\n//this creates our react store\nconst store = configureStore({\n\treducer: counterSlice.reducer,\n});\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}