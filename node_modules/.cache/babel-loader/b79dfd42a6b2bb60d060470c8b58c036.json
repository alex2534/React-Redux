{"ast":null,"code":"var _jsxFileName = \"/Users/alexnascimento/Desktop/redux-starting-project/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  //we don't have to give any argumento this useDispatch\n  //it gives as a usedispatch function so we can call and it will dispatch a action\n  //agains the redux store\n  const dispatch = useDispatch(); //we have to pass a function to useSelector the function\n  //will recieve the state from the redux\n  //the parte we want to extract from the redux store\n\n  const counter = useSelector(state => state.counter);\n\n  const incrementHandler = () => {\n    //an action is an object as an argument\n    dispatch();\n  };\n\n  const toggleCounterHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Counter, \"gthwM6sqboLtlTmr2wLRFX51eJQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/alexnascimento/Desktop/redux-starting-project/src/components/Counter.js"],"names":["useSelector","useDispatch","classes","Counter","dispatch","counter","state","incrementHandler","toggleCounterHandler","value"],"mappings":";;;AAAA;AAEA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACrB;AACA;AACA;AACA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B,CAJqB,CAMrB;AACA;AACA;;AACA,QAAMI,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;;AAEA,QAAME,gBAAgB,GAAG,MAAM;AAC9B;AACAH,IAAAA,QAAQ;AACR,GAHD;;AAKA,QAAMI,oBAAoB,GAAG,MAAM,CAAE,CAArC;;AAEA,sBACC;AAAM,IAAA,SAAS,EAAEN,OAAO,CAACG,OAAzB;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACO,KAAxB;AAAA,gBAAgCJ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAOC;AAAQ,MAAA,OAAO,EAAEG,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CA7BD;;GAAML,O;UAIYF,W,EAKDD,W;;;KATXG,O;AA+BN,eAAeA,OAAf","sourcesContent":["/** @format */\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n\t//we don't have to give any argumento this useDispatch\n\t//it gives as a usedispatch function so we can call and it will dispatch a action\n\t//agains the redux store\n\tconst dispatch = useDispatch();\n\n\t//we have to pass a function to useSelector the function\n\t//will recieve the state from the redux\n\t//the parte we want to extract from the redux store\n\tconst counter = useSelector((state) => state.counter);\n\n\tconst incrementHandler = () => {\n\t\t//an action is an object as an argument\n\t\tdispatch();\n\t};\n\n\tconst toggleCounterHandler = () => {};\n\n\treturn (\n\t\t<main className={classes.counter}>\n\t\t\t<h1>Redux Counter</h1>\n\t\t\t<div className={classes.value}>{counter}</div>\n\t\t\t<div>\n\t\t\t\t<button>increment</button>\n\t\t\t\t<button>Decrement</button>\n\t\t\t</div>\n\t\t\t<button onClick={toggleCounterHandler}>Toggle Counter</button>\n\t\t</main>\n\t);\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}